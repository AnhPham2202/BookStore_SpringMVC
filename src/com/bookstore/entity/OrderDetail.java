package com.bookstore.entity;
// Generated Dec 17, 2021, 11:20:09 AM by Hibernate Tools 4.3.5.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * OrderDetail generated by hbm2java
 */
@Entity
@Table(name = "order_detail", catalog = "bookstoredb")
@NamedQueries({
	@NamedQuery(name = "getOrderDetailByOrderId", query = "SELECT o FROM OrderDetail o "
			+ "WHERE o.bookOrder.orderId = :orderId")
})
public class OrderDetail implements java.io.Serializable {

	private OrderDetailId id = new OrderDetailId();
	private Book book;
	private BookOrder bookOrder;
	
	private int quantity;
	private float subtotal;
	
	

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "subtotal", nullable = false, precision = 12, scale = 0)
	public float getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(float subtotal) {
		this.subtotal = subtotal;
	}
	

	public OrderDetail() {
	}

	public OrderDetail(OrderDetailId id) {
		this.id = id;
	}

	public OrderDetail(OrderDetailId id, Book book, BookOrder bookOrder) {
		this.id = new OrderDetailId(bookOrder.getOrderId(), book.getBookId());
		this.book = book;
		this.bookOrder = bookOrder;
	}

	
	// TO DO: RESEARCH AGAIN ABOUT @AttributeOverrides 
	// CAUSE WHEN USE MAPSID WITH ENTITY THAT ALREADY IN DB WILL CAUSE ERR
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "bookId", column = @Column(name = "book_id"))})
	public OrderDetailId getId() {
		return this.id;
	}

	public void setId(OrderDetailId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
//	@MapsId("bookId")
	@JoinColumn(name = "book_id", insertable = false, updatable = false)
	public Book getBook() {
		return this.book;
	}

	public void setBook(Book book) {
		this.book = book;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@MapsId("orderId")
	@JoinColumn(name = "order_id", insertable = false, updatable = false)
	public BookOrder getBookOrder() {
		return this.bookOrder;
	}

	public void setBookOrder(BookOrder bookOrder) {
		this.bookOrder = bookOrder;
	}

}
